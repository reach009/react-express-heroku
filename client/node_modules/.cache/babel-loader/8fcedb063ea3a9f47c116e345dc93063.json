{"ast":null,"code":"import _defineProperty from \"/Users/reach/Documents/The Complete 2019 Web Development Bootcamp/React_NodeJS/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/reach/Documents/The Complete 2019 Web Development Bootcamp/React_NodeJS/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/reach/Documents/The Complete 2019 Web Development Bootcamp/React_NodeJS/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reach/Documents/The Complete 2019 Web Development Bootcamp/React_NodeJS/client/src/components/CreateArea.jsx\";\n// import React from \"react\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import Fab from \"@material-ui/core/Fab\";\n// import Zoom from \"@material-ui/core/Zoom\";\n// import { Component } from \"react\";\n// import axios from \"axios\";\n// export default class CreateArea extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       title: \"\",\n//       content: \"\"\n//     };\n//   }\n//   handleChange = event => {\n//     if (event.target.name === \"title\") {\n//       this.setState({ title: event.target.value });\n//     } else {\n//       this.setState({ content: event.target.value });\n//     }\n//   };\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     // console.log(this.state.title);\n//     // console.log(this.state.content);\n//     const note = {\n//       title: this.state.title,\n//       content: this.state.content\n//     };\n//     axios.post(\"/notes\", note).then(res => {\n//       console.log(res);\n//       console.log(res.data);\n//     });\n//     this.props.onAdd();\n//     this.setState({\n//       title: \"\",\n//       content: \"\"\n//     });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <form className=\"create-note\">\n//           <input\n//             name=\"title\"\n//             onChange={this.handleChange}\n//             value={this.state.title}\n//             placeholder=\"Title\"\n//           />\n//           <textarea\n//             name=\"content\"\n//             onChange={this.handleChange}\n//             value={this.state.content}\n//             placeholder=\"Take a note...\"\n//             rows={3}\n//           />\n//           <Zoom in={true}>\n//             <Fab onClick={this.handleSubmit}>\n//               <AddIcon />\n//             </Fab>\n//           </Zoom>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isExpanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useState3 = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      note = _useState4[0],\n      setNote = _useState4[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevNote) {\n      return _objectSpread({}, prevNote, _defineProperty({}, name, value));\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"create-note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, isExpanded && React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"content\",\n    onClick: expand,\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: isExpanded ? 3 : 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(Zoom, {\n    in: isExpanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    onClick: submitNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["/Users/reach/Documents/The Complete 2019 Web Development Bootcamp/React_NodeJS/client/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expand"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,kBACSL,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,MAClBM,UADkB;AAAA,MACNC,WADM;;AAAA,mBAGDP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAHP;AAAA;AAAA,MAGlBC,IAHkB;AAAA,MAGZC,OAHY;;AAQzB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,wBACHA,KAAK,CAACC,MADH;AAAA,QACnBC,IADmB,iBACnBA,IADmB;AAAA,QACbC,KADa,iBACbA,KADa;AAG3BL,IAAAA,OAAO,CAAC,UAAAM,QAAQ,EAAI;AAClB,+BACKA,QADL,sBAEGF,IAFH,EAEUC,KAFV;AAID,KALM,CAAP;AAMD;;AAED,WAASE,UAAT,CAAoBL,KAApB,EAA2B;AACzBR,IAAAA,KAAK,CAACc,KAAN,CAAYT,IAAZ;AACAC,IAAAA,OAAO,CAAC;AACNH,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAD,CAAP;AAIAI,IAAAA,KAAK,CAACO,cAAN;AACD;;AAED,WAASC,MAAT,GAAkB;AAChBd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,IACT;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAEM,YAFZ;AAGE,IAAA,KAAK,EAAEF,IAAI,CAACF,KAHd;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAEa,MAFX;AAGE,IAAA,QAAQ,EAAET,YAHZ;AAIE,IAAA,KAAK,EAAEF,IAAI,CAACD,OAJd;AAKE,IAAA,WAAW,EAAC,gBALd;AAME,IAAA,IAAI,EAAEH,UAAU,GAAG,CAAH,GAAO,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEY,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAjBF,CADF,CADF;AA2BD;;AAED,eAAed,UAAf","sourcesContent":["// import React from \"react\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import Fab from \"@material-ui/core/Fab\";\n// import Zoom from \"@material-ui/core/Zoom\";\n// import { Component } from \"react\";\n// import axios from \"axios\";\n\n// export default class CreateArea extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       title: \"\",\n//       content: \"\"\n//     };\n//   }\n\n//   handleChange = event => {\n//     if (event.target.name === \"title\") {\n//       this.setState({ title: event.target.value });\n//     } else {\n//       this.setState({ content: event.target.value });\n//     }\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     // console.log(this.state.title);\n//     // console.log(this.state.content);\n\n//     const note = {\n//       title: this.state.title,\n//       content: this.state.content\n//     };\n\n//     axios.post(\"/notes\", note).then(res => {\n//       console.log(res);\n//       console.log(res.data);\n//     });\n\n//     this.props.onAdd();\n\n//     this.setState({\n//       title: \"\",\n//       content: \"\"\n//     });\n\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <form className=\"create-note\">\n//           <input\n//             name=\"title\"\n//             onChange={this.handleChange}\n//             value={this.state.title}\n//             placeholder=\"Title\"\n//           />\n//           <textarea\n//             name=\"content\"\n//             onChange={this.handleChange}\n//             value={this.state.content}\n//             placeholder=\"Take a note...\"\n//             rows={3}\n//           />\n//           <Zoom in={true}>\n//             <Fab onClick={this.handleSubmit}>\n//               <AddIcon />\n//             </Fab>\n//           </Zoom>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [isExpanded, setExpanded] = useState(false);\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isExpanded && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        )}\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n        <Zoom in={isExpanded}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}